{"version":3,"sources":["ChartContainer.js","recharts-charts/src/components/ChartRenderer.js","bizcharts-charts/src/components/ChartRenderer.js","App.js","reportWebVitals.js","index.js"],"names":["cubejsApi","cubejs","apiUrl","ChartRenderer","renderFunction","query","pivotConfig","renderProps","useCubeQuery","resultSet","ChartContainer","CartesianChart","children","ChartComponent","width","height","data","chartPivot","dataKey","colors","TypeToChartComponent","line","LineChart","seriesNames","map","series","i","stackId","key","name","title","stroke","bar","BarChart","fill","area","AreaChart","pie","isAnimationActive","nameKey","e","index","length","number","type","justify","align","style","s","value","totalRow","table","pagination","columns","tableColumns","dataSource","tablePivot","stackedChartData","pivot","xValues","yValuesArray","yValues","m","x","axisValuesString","color","measure","Number","parseFloat","reduce","a","b","concat","libs","recharts","RechartsCharts","bizcharts","scale","tickCount","forceFit","crosshairs","position","size","radius","App","useState","measures","dimensions","setQuery","setPivotConfig","library","setLibrary","chartType","setChartType","useEffect","document","body","addEventListener","event","console","log","detail","chartingLibrary","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.757e73cd.chunk.js","sourcesContent":["import cubejs from '@cubejs-client/core';\nimport { CubeProvider, useCubeQuery } from '@cubejs-client/react';\n\nconst API_URL = 'http://localhost:4000/cubejs-api/v1';\nconst CUBEJS_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1Ijp7InVzZXJJZCI6IjEwMDUwMCJ9LCJpYXQiOjE2MDM3MTQ2MTcsImV4cCI6MTYwNjMwNjYxN30.6RyBVUMZ0JMeByKYuXK-HmITB8MTwwE4k98GP8qyInw';\nconst cubejsApi = cubejs(CUBEJS_TOKEN, {\n  apiUrl: API_URL\n});\n\nconst ChartRenderer = ({\n  renderFunction,\n  query,\n  pivotConfig\n}) => {\n  const renderProps = useCubeQuery(query);\n\n  if (!renderProps.resultSet) {\n    return <div>Loading...</div>;\n  }\n\n  return renderFunction({ ...renderProps,\n    pivotConfig\n  });\n}; // const renderFunction = (props) => {\n// return <Chart />;\n// }\n\n\nconst ChartContainer = ({\n  renderFunction,\n  query,\n  pivotConfig = null\n}) => {\n  return <CubeProvider cubejsApi={cubejsApi}>\n      <ChartRenderer renderFunction={renderFunction} query={query} pivotConfig={pivotConfig} />\n    </CubeProvider>;\n};\n\nexport default ChartContainer;","import React from 'react';\nimport { CartesianGrid, PieChart, Pie, Cell, AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer, Legend, BarChart, Bar, LineChart, Line } from 'recharts';\nimport { Row, Col, Statistic, Table } from 'antd';\n\nconst CartesianChart = ({\n  resultSet,\n  children,\n  ChartComponent\n}) => <ResponsiveContainer width=\"100%\" height={350}>\n    <ChartComponent data={resultSet.chartPivot()}>\n      <XAxis dataKey=\"x\" />\n      <YAxis />\n      <CartesianGrid />\n      {children}\n      <Legend />\n      <Tooltip />\n    </ChartComponent>\n  </ResponsiveContainer>;\n\nconst colors = ['#FF6492', '#141446', '#7A77FF'];\n\nconst stackedChartData = resultSet => {\n  const data = resultSet.pivot().map(({\n    xValues,\n    yValuesArray\n  }) => yValuesArray.map(([yValues, m]) => ({\n    x: resultSet.axisValuesString(xValues, ', '),\n    color: resultSet.axisValuesString(yValues, ', '),\n    measure: m && Number.parseFloat(m)\n  }))).reduce((a, b) => a.concat(b), []);\n  return data;\n};\n\nconst TypeToChartComponent = {\n  line: ({\n    resultSet\n  }) => <CartesianChart resultSet={resultSet} ChartComponent={LineChart}>\n      {resultSet.seriesNames().map((series, i) => <Line key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} stroke={colors[i]} />)}\n    </CartesianChart>,\n  bar: ({\n    resultSet\n  }) => <CartesianChart resultSet={resultSet} ChartComponent={BarChart}>\n      {resultSet.seriesNames().map((series, i) => <Bar key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} fill={colors[i]} />)}\n    </CartesianChart>,\n  area: ({\n    resultSet\n  }) => <CartesianChart resultSet={resultSet} ChartComponent={AreaChart}>\n      {resultSet.seriesNames().map((series, i) => <Area key={series.key} stackId=\"a\" dataKey={series.key} name={series.title} stroke={colors[i]} fill={colors[i]} />)}\n    </CartesianChart>,\n  pie: ({\n    resultSet\n  }) => <ResponsiveContainer width=\"100%\" height={350}>\n      <PieChart>\n        <Pie isAnimationActive={false} data={resultSet.chartPivot()} nameKey=\"x\" dataKey={resultSet.seriesNames()[0].key} fill=\"#8884d8\">\n          {resultSet.chartPivot().map((e, index) => <Cell key={index} fill={colors[index % colors.length]} />)}\n        </Pie>\n        <Legend />\n        <Tooltip />\n      </PieChart>\n    </ResponsiveContainer>,\n  number: ({\n    resultSet\n  }) => <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{\n    height: '100%'\n  }}>\n      <Col>\n        {resultSet.seriesNames().map(s => <Statistic value={resultSet.totalRow()[s.key]} />)}\n      </Col>\n    </Row>,\n  table: ({\n    resultSet,\n    pivotConfig\n  }) => <Table pagination={false} columns={resultSet.tableColumns(pivotConfig)} dataSource={resultSet.tablePivot(pivotConfig)} />\n};\nexport default TypeToChartComponent;","import React from 'react';\nimport { Chart, Axis, Tooltip, Geom, Coord, Legend } from 'bizcharts';\nimport { Row, Col, Statistic, Table } from 'antd';\n\nconst stackedChartData = resultSet => {\n  const data = resultSet.pivot().map(({\n    xValues,\n    yValuesArray\n  }) => yValuesArray.map(([yValues, m]) => ({\n    x: resultSet.axisValuesString(xValues, ', '),\n    color: resultSet.axisValuesString(yValues, ', '),\n    measure: m && Number.parseFloat(m)\n  }))).reduce((a, b) => a.concat(b), []);\n  return data;\n};\n\nconst TypeToChartComponent = {\n  line: ({\n    resultSet\n  }) => <Chart scale={{\n    x: {\n      tickCount: 8\n    }\n  }} height={400} data={stackedChartData(resultSet)} forceFit>\n      <Axis name=\"x\" />\n      <Axis name=\"measure\" />\n      <Tooltip crosshairs={{\n      type: 'y'\n    }} />\n      <Geom type=\"line\" position={`x*measure`} size={2} color=\"color\" />\n    </Chart>,\n  bar: ({\n    resultSet\n  }) => <Chart scale={{\n    x: {\n      tickCount: 8\n    }\n  }} height={400} data={stackedChartData(resultSet)} forceFit>\n      <Axis name=\"x\" />\n      <Axis name=\"measure\" />\n      <Tooltip />\n      <Geom type=\"interval\" position={`x*measure`} color=\"color\" />\n    </Chart>,\n  area: ({\n    resultSet\n  }) => <Chart scale={{\n    x: {\n      tickCount: 8\n    }\n  }} height={400} data={stackedChartData(resultSet)} forceFit>\n      <Axis name=\"x\" />\n      <Axis name=\"measure\" />\n      <Tooltip crosshairs={{\n      type: 'y'\n    }} />\n      <Geom type=\"area\" position={`x*measure`} size={2} color=\"color\" />\n    </Chart>,\n  pie: ({\n    resultSet\n  }) => <Chart height={400} data={resultSet.chartPivot()} forceFit>\n      <Coord type=\"theta\" radius={0.75} />\n      {resultSet.seriesNames().map(s => <Axis name={s.key} />)}\n      <Legend position=\"right\" />\n      <Tooltip />\n      {resultSet.seriesNames().map(s => <Geom type=\"interval\" position={s.key} color=\"category\" />)}\n    </Chart>,\n  number: ({\n    resultSet\n  }) => <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{\n    height: '100%'\n  }}>\n      <Col>\n        {resultSet.seriesNames().map(s => <Statistic value={resultSet.totalRow()[s.key]} />)}\n      </Col>\n    </Row>,\n  table: ({\n    resultSet,\n    pivotConfig\n  }) => <Table pagination={false} columns={resultSet.tableColumns(pivotConfig)} dataSource={resultSet.tablePivot(pivotConfig)} />\n};\nexport default TypeToChartComponent;","import { useState, useEffect } from 'react';\nimport ChartContainer from './ChartContainer';\nimport RechartsCharts from './recharts-charts/src/components/ChartRenderer';\nimport BizchartsCharts from './bizcharts-charts/src/components/ChartRenderer';\n\n/*\nconst libs = {};*/\nconst libs = {\n  recharts: RechartsCharts,\n  bizcharts: BizchartsCharts\n};\n\nconst App = () => {\n  const [query, setQuery] = useState({\n    measures: ['Sales.count'],\n    dimensions: ['Users.country']\n  });\n  const [pivotConfig, setPivotConfig] = useState(null);\n  const [library, setLibrary] = useState(null);\n  const [chartType, setChartType] = useState(null);\n  useEffect(() => {\n    document.body.addEventListener('cubejs', event => {\n      console.log(event.detail);\n      const {\n        query,\n        chartingLibrary,\n        chartType\n      } = event.detail;\n\n      if (query) {\n        setQuery(query);\n      }\n\n      if (pivotConfig) {\n        setPivotConfig(pivotConfig);\n      }\n\n      if (chartingLibrary) {\n        setLibrary(chartingLibrary);\n      }\n\n      if (chartType) {\n        setChartType(chartType);\n      }\n    });\n  }, []);\n  return <div className=\"App\">\n      <button onClick={() => setLibrary(library === 'recharts' ? 'bizcharts' : 'recharts')}>\n        Change Chart Type\n      </button>\n\n      <button onClick={() => setQuery({\n      measures: ['Sales.count', 'Sales.amount'],\n      dimensions: ['Sales.ts.month']\n    })}>\n        Change Query\n      </button>\n\n      {libs[library]?.[chartType] ? <ChartContainer renderFunction={libs[library][chartType]} query={query} pivotConfig={pivotConfig} /> : null}\n    </div>;\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}